[tool.poetry]
name = "firebase-messaging"
version = "0.3.0"
description = "FCM/GCM push notification client"
authors = ["sdb9696 <steven.beth@gmail.com>"]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/sdb9696/firebase-messaging"
repository = "https://github.com/sdb9696/firebase-messaging"
documentation = "http://firebase-messaging.readthedocs.io/"
keywords = [
    "Firebase",
    "Firebase Cloud Messaging",
    "Google Cloud Messaging",
]
classifiers = [
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
packages = [
    { include = "firebase_messaging" },
    { include = "tests", format = "sdist" },
]
include = [
    "LICENSE", 
    "CHANGELOG.rst",
]

[tool.poetry.dependencies]
python = "^3.8"
protobuf = "^4.24.3"
http-ece = "^1.1.0"
cryptography = ">=2.5"
sphinx = {version = "7.1.2", optional = true}
sphinx-rtd-theme = {version = "^1.3.0", optional = true}
sphinx-autodoc-typehints = {version = "^1.24.0", optional = true}
aiohttp = "^3.9.3"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-rtd-theme", "sphinx-autodoc-typehints"]

[tool.poetry.group.dev.dependencies]
pre-commit = "*"
tox = "*"
pytest = "*"
pytest-mock = "*"
pytest-asyncio = "*"
pytest-cov = "*"
async-timeout = ">=3.0.0"
mypy-protobuf = "^3.5.0"
pytest-socket = "^0.7.0"
aioresponses = "^0.7.6"

[tool.pytest.ini_options]
testpaths = "tests"
norecursedirs = ".git"
asyncio_mode = "auto"
addopts = "--disable-socket --allow-unix-socket"

[tool.coverage.run]
omit = [
    "firebase_messaging/proto/*",
    "firebase_messaging/decrypt.py*"
    ]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py38"
exclude = [
    "firebase_messaging/proto/*"
]
select = [
  "E",  # pycodestyle
#  "D",  # pydocstyle
  "F",  # pyflakes
  "UP",  # pyupgrade
  "B",  # flake8-bugbear
  "SIM",  # flake8-simplify
  "I",  # isort
  "S",  # bandit
]
ignore = [
  "D105",  # Missing docstring in magic method
  "D107",  # Missing docstring in `__init__`
]

[tool.ruff.pydocstyle]
convention = "pep257"

[tool.ruff.per-file-ignores]
"tests/*.py" = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "F401",
    "S101", # allow asserts
    "E501", # ignore line-too-longs
]
"docs/source/conf.py" = [
    "D100",
    "D103",
]

[tool.mypy]
exclude = [
    'tests/.*',  # TOML literal string (single-quotes, no escaping necessary)
    'docs/.*'
]
disallow_untyped_defs = true
